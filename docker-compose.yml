
services:
  job-service:
    context: .
    build: ./services/job-service
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - MONGO_URI=mongodb://admin:password@mongo-primary:27017,mongo-secondary1:27017,mongo-secondary2:27017/?replicaSet=rs0
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_BROKERS=kafka-1:9092,kafka-2:9092,kafka-3:9092,kafka-4:9092
      - JWT_SECRET=your_jwt_secret
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    depends_on:
      - mongo-primary
      - mongo-secondary1
      - mongo-secondary2
      - redis
      - kafka-1
      - kafka-2
      - kafka-3
      - kafka-4
    deploy:
      replicas: 3
      resources:
        limits:
          memory: 2G
          cpus: "1.0"
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 60s
    networks:
      - backend

  # # AI Service for Skills Analysis and Career Path Generation
  # ai-service:
  #   image: tensorflow/tensorflow:latest-gpu
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     - MODEL_PATH=/models
  #     - BATCH_SIZE=128
  #   volumes:
  #     - ./ai-models:/models
  #   deploy:
  #     replicas: 4
  #     resources:
  #       limits:
  #         memory: 8G
  #         cpus: "4.0"
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: 1
  #             capabilities: [gpu]
  #     restart_policy:
  #       condition: on-failure
  #       max_attempts: 3

  # MongoDB Replica Set
  mongo-primary:
    image: mongo:5.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongo-primary-data:/data/db
      - ./mongo-keyfile:/mongo-keyfile
      - ./mongo-init.js:/docker-entrypoint-initdb.d/init.js
    command: mongod --replSet rs0 --bind_ip_all --keyFile /mongo-keyfile
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: "1.5"
      restart_policy:
        condition: on-failure
        max_attempts: 3

  mongo-secondary1:
    image: mongo:5.0
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongo-secondary1-data:/data/db
      - ./mongo-keyfile:/mongo-keyfile
    command: mongod --replSet rs0 --bind_ip_all --keyFile /mongo-keyfile
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: "1.5"
      restart_policy:
        condition: on-failure
        max_attempts: 3

  mongo-secondary2:
    image: mongo:5.0
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongo-secondary2-data:/data/db
      - ./mongo-keyfile:/mongo-keyfile
    command: mongod --replSet rs0 --bind_ip_all --keyFile /mongo-keyfile
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: "1.5"
      restart_policy:
        condition: on-failure
        max_attempts: 3

  # Redis Client
  redis:
    image: redis:6.2
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 1G
          cpus: "0.5"
      restart_policy:
        condition: on-failure
        max_attempts: 3

  # Kafka Cluster
  kafka-1:
    image: confluentinc/cp-kafka:7.3.0
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_NUM_PARTITIONS=24
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_MESSAGE_MAX_BYTES=10485760
      - KAFKA_COMPRESSION_TYPE=snappy
    depends_on:
      - zookeeper
    deploy:
      resources:
        limits:
          memory: 3G
          cpus: "1.5"
      restart_policy:
        condition: on-failure
        max_attempts: 3

  kafka-2:
    image: confluentinc/cp-kafka:7.3.0
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-2:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_NUM_PARTITIONS=24
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_MESSAGE_MAX_BYTES=10485760
      - KAFKA_COMPRESSION_TYPE=snappy
    depends_on:
      - zookeeper
    deploy:
      resources:
        limits:
          memory: 3G
          cpus: "1.5"
      restart_policy:
        condition: on-failure
        max_attempts: 3

  kafka-3:
    image: confluentinc/cp-kafka:7.3.0
    environment:
      - KAFKA_BROKER_ID=3
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-3:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_NUM_PARTITIONS=24
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_MESSAGE_MAX_BYTES=10485760
      - KAFKA_COMPRESSION_TYPE=snappy
    depends_on:
      - zookeeper
    deploy:
      resources:
        limits:
          memory: 3G
          cpus: "1.5"
      restart_policy:
        condition: on-failure
        max_attempts: 3

  kafka-4:
    image: confluentinc/cp-kafka:7.3.0
    environment:
      - KAFKA_BROKER_ID=4
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-4:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_NUM_PARTITIONS=24
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_MESSAGE_MAX_BYTES=10485760
      - KAFKA_COMPRESSION_TYPE=snappy
    depends_on:
      - zookeeper
    deploy:
      resources:
        limits:
          memory: 3G
          cpus: "1.5"
      restart_policy:
        condition: on-failure
        max_attempts: 3

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_MAX_CLIENT_CNXNS=1000
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "0.75"
      restart_policy:
        condition: on-failure
        max_attempts: 3

volumes:
  mongo-primary-data:
  mongo-secondary1-data:
  mongo-secondary2-data:
  redis-data: